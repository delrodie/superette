<?php

namespace AppBundle\Repository;

/**
 * FactureRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class FactureRepository extends \Doctrine\ORM\EntityRepository
{
    public function getNombreFactrure()
    {
        return $this->createQueryBuilder('f')
                    ->select('count(f.id)')
                    ->getQuery()->getSingleScalarResult()
            ;
    }

    public function findFacture($reference)
    {
        return $this->createQueryBuilder('f')
                    ->where('f.id = :reference')
                    ->setParameter('reference', $reference)
            ;
    }

    public function findByPeriode($debut=null, $fin=null,$caissier=null)
    {
        if ($debut && $fin && $caissier){
            return $this->createQueryBuilder('f')
                        ->where('f.date >= :debut')
                        ->andWhere('f.date <= :fin')
                        ->andWhere('f.montant <> 0')
                        ->andWhere('f.statut IS NULL')
                        ->andWhere('f.publiePar = :caissier')
                        ->orderBy('f.publieLe', 'DESC')
                        ->setParameters([
                            'debut' => $debut,
                            'fin' => $fin,
                            'caissier' => $caissier
                        ])
                        ->getQuery()->getResult()
                ;
        }elseif ($debut && $fin){
            return $this->createQueryBuilder('f')
                ->where('f.date >= :debut')
                ->andWhere('f.date <= :fin')
                ->andWhere('f.montant <> 0')
                ->andWhere('f.statut IS NULL')
                ->orderBy('f.publieLe', 'DESC')
                ->setParameters([
                    'debut' => $debut,
                    'fin' => $fin,
                ])
                ->getQuery()->getResult()
                ;
        }elseif ($debut && $caissier){
            return $this->createQueryBuilder('f')
                        ->where('f.date >= :debut')
                        ->andWhere('f.montant <> 0')
                        ->andWhere('f.statut IS NULL')
                        ->andWhere('f.publiePar = :caissier')
                        ->orderBy('f.publieLe', 'DESC')
                        ->setParameters([
                            'debut'=> $debut,
                            'caissier'=>$caissier
                        ])
                        ->getQuery()->getResult()
                ;
        }elseif ($fin && $caissier){
            return $this->createQueryBuilder('f')
                        ->where('f.date <= :fin')
                        ->andWhere('f.montant <> 0')
                        ->andWhere('f.statut IS NULL')
                        ->andWhere('f.publiePar = :caissier')
                        ->orderBy('f.publieLe', 'DESC')
                        ->setParameters([
                            'fin'=> $fin,
                            'caissier' => $caissier,
                        ])
                        ->getQuery()->getResult()
                ;
        }elseif ($debut){
            return $this->createQueryBuilder('f')
                ->where('f.date >= :debut')
                ->andWhere('f.montant <> 0')
                ->andWhere('f.statut IS NULL')
                ->orderBy('f.publieLe', 'DESC')
                ->setParameter('debut', $debut)
                ->getQuery()->getResult()
                ;
        }elseif ($fin){
            return $this->createQueryBuilder('f')
                ->where('f.date <= :fin')
                ->andWhere('f.montant <> 0')
                ->andWhere('f.statut IS NULL')
                ->orderBy('f.publieLe', 'DESC')
                ->setParameter('fin', $fin)
                ->getQuery()->getResult()
                ;
        }elseif ($caissier){
            return $this->createQueryBuilder('f')
                ->where('f.publiePar = :caissier')
                ->andWhere('f.montant <> 0')
                ->andWhere('f.statut IS NULL')
                ->orderBy('f.publieLe', 'DESC')
                ->setParameter('caissier', $caissier)
                ->getQuery()->getResult()
                ;
        }else{
            return $this->createQueryBuilder('f')->where('f.montant <> 0')
                ->andWhere('f.statut IS NULL')->orderBy('f.publieLe','DESC')->getQuery()->getResult();
        }
    }

    public function findListeDESC()
    {
        return $this->createQueryBuilder('f')
                    ->andWhere('f.montant <> 0')
                    ->andWhere('f.statut IS NULL')
                    ->groupBy('f.date')
                    ->orderBy('f.publieLe', 'DESC')
                    ->getQuery()->getResult()
            ;
    }
}
